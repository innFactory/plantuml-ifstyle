@startuml

' (c) innFactory GmbH
' www.innFactory.de

!ifndef FONTNAME
!define FONTNAME "Roboto"
!endif

!ifndef FONTSIZE
!define FONTSIZE 11
!endif

!ifdef DARK
!define ACCENT 333
!define ACCENTDARK aaa
skinparam stereotypeCBackgroundColor ACCENT
!define DARKSTYLE
!endif
!ifdef LIGHT
!define ACCENT 999
!define ACCENTDARK 333
skinparam stereotypeCBackgroundColor ACCENTDARK
!define LIGHTSTYLE
!endif

!ifdef LIGHTSTYLE
!define PRIMARY 000
!define SECONDARY 656565
!define ARROWCOLOR 000
!define ARROWFONTCOLOR 333
!define BORDERCOLOR e5e5e5
!define BOXBG f1f1f1
!define LIGHTBORDERCOLOR cccccc
!define LIGHTBG e0e0e0
skinparam backgroundColor fff
!endif

!ifdef DARKSTYLE
!define PRIMARY fff
!define SECONDARY e5e5e5
!define ARROWCOLOR aaa
!define ARROWFONTCOLOR ababab
!define BORDERCOLOR 4b4c4d
!define BOXBG 282a2b
!define LIGHTBORDERCOLOR 767676
!define LIGHTBG 333333
skinparam backgroundColor 222
!endif

!function font_style()
  fontColor PRIMARY
  fontName FONTNAME
  fontSize FONTSIZE
  stereotypeFontColor SECONDARY
  stereotypeFontSize FONTSIZE
!endfunction

!function basic_style()
  backgroundColor BOXBG
  borderColor BORDERCOLOR
!endfunction

!function light_style()
  backgroundColor LIGHTBG
  borderColor LIGHTBORDERCOLOR
!endfunction

!function accent_style()
  backgroundColor ACCENT
  borderColor ACCENTDARK
!endfunction

!function arrow_style()
  arrowColor ARROWCOLOR
  arrowFontName FONTNAME
  arrowFontColor ARROWFONTCOLOR
  arrowFontSize FONTSIZE
!endfunction

' Class diagrams

skinparam circledCharacter {
  radius 8
  fontSize FONTSIZE
  fontName FONTNAME
}

skinparam class {
  basic_style()
  font_style()
  arrow_style()

  attributeFontColor SECONDARY
  attributeFontSize FONTSIZE
  attributeIconSize FONTSIZE

}

' Sequence diagrams

skinparam actor {
  accent_style()
  font_style()
}

skinparam participant {
  basic_style()
  font_style()
}

skinparam collections {
  basic_style()
  font_style()
}

skinparam SequenceBox{
  light_style()
  font_style()
}

' Component diagrams

skinparam interface {
  accent_style()
  font_style()
}

skinparam component {
  basic_style()
  font_style()
}

skinparam node {
  basic_style()
  font_style()
}

skinparam database {
  basic_style()
  font_style()
  BoxPadding 30
}

skinparam queue {
  basic_style()
  font_style()
}

' Use Case diagrams

skinparam usecase {
  basic_style()
  font_style()
  arrow_style()
}

skinparam activity {
  basic_style()
  font_style()
  arrow_style()
}

skinparam sequence {
  font_style()
  arrow_style()

  lifeLineBorderColor ARROWCOLOR
  lifeLineBackgroundColor ARROWFONTCOLOR
}

skinparam boundary {
  accent_style()
  font_style()
}

skinparam control {
  accent_style()
  font_style()
}

skinparam entity {
  accent_style()
  font_style()
}

' State diagrams

skinparam state {
  basic_style()
  font_style()
  arrow_style()
  startColor ACCENT
  endColor ACCENTDARK
}

' Object diagrams

skinparam object {
  basic_style()
  font_style()
  arrow_style()
}

' Common

skinparam note {
  accent_style()
  font_style()
}

skinparam cloud {
  basic_style()
  font_style()
  arrow_style()
}

skinparam node {
  basic_style()
  font_style()
  arrow_style()
}

skinparam package {
  basic_style()
  font_style()
  arrow_style()
}

skinparam rectangle {
  basic_style()
  font_style()
}

skinparam storage {
  basic_style()
  font_style()
}

skinparam agent {
  basic_style()
  font_style()
}

skinparam artifact {
  basic_style()
  font_style()
}

skinparam card {
  basic_style()
  font_style()
}

skinparam file {
  basic_style()
  font_style()
}

skinparam folder {
  basic_style()
  font_style()
}

skinparam frame {
  basic_style()
  font_style()
}

skinparam stack {
  basic_style()
  font_style()
}

skinparam title {
  basic_style()
  font_style()
  fontSize 18
}


' Define more elements
!define Table(name,desc) entity name as "desc" << (T,ACCENT) >>
!define primary_key(x) <&key><b>x</b>
!define foreign_key(x) <&link-intact><b><i>x</i></b>
!define unique(x) <i>x</i>
!define not_null(x) <u>x</u>
' Define Datatypes with color
!ifdef COLOREDTYPES
!ifdef DARK
!define timestamp <color:LightSkyBlue>timestamp</color>
!define time <color:LightSkyBlue>time</color>
!define geometry <color:Tomato>geometry</color>
!define integer <color:Gold>integer</color>
!define bigserial <color:Gold>bigserial</color>
!define boolean <color:Gold>boolean</color>
!define byte <color:Gold>byte</color>
!define varchar(x) <color:Peru>varchar (x)</color>
!define text <color:Peru>text</color>
!define uuid <color:MediumOrchid>uuid</color>
!define json <color:MediumOrchid>json</color>
!endif
!ifdef LIGHT
!define timestamp <color:DarkBlue>timestamp</color>
!define time <color:DarkBlue>time</color>
!define geometry <color:Tomato>geometry</color>
!define integer <color:DarkOrange>integer</color>
!define bigserial <color:DarkOrange>bigserial</color>
!define boolean <color:DarkOrange>boolean</color>
!define byte <color:DarkOrange>byte</color>
!define varchar(x) <color:Peru>varchar (x)</color>
!define text <color:Peru>text</color>
!define uuid <color:MediumOrchid>uuid</color>
!define json <color:MediumOrchid>json</color>
!endif
!endif

hide methods
hide stereotypes

!ifdef WATERMARK
right footer <img:https://raw.githubusercontent.com/innFactory/plantuml-ifstyle/master/img/watermark80.png>
!endif

<style>
mindmapDiagram {
  node {
	  basic_style()
    font_style()
  }
  rootNode {
	  basic_style()
    font_style()
  }
  leafNode {
	  basic_style()
    font_style()
  }
}
</style>

@enduml